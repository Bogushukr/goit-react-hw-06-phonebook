{"version":3,"sources":["components/ContactItem/ContactItem.module.css","components/Filter/Filter.module.css","components/ContactList/ContactList.module.css","components/Breakpoints/Breakpoints.module.css","components/PhoneBook/PhoneBook.module.css","redux/contacts/contacts-types.js","redux/contacts/contacts-actions.js","redux/contacts/contacts-reducers.js","redux/contacts/contacts-persist.js","redux/middleware.js","redux/store.js","redux/ReduxStorage.jsx","components/ContactForm/ContactForm.jsx","components/Filter/Filter.jsx","components/ContactItem/ContactItem.jsx","components/ContactList/ContactList.jsx","components/Breakpoints/Breakpoints.jsx","components/PhoneBook/PhoneBook.jsx","routes.js","App.js","index.js","components/ContactForm/ContactForm.module.css"],"names":["module","exports","types","ADD","DELETE","FILTER","addContact","createAction","name","number","payload","id","shortid","generate","deleteContact","filterContacts","items","createReducer","actions","state","filter","_","contactsReducer","combineReducers","persistContactsConfig","key","storage","blacklist","persistReducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","vault","configureStore","reducer","contacts","contactsPersistReducer","devTools","process","persistor","persistStore","ReduxStorage","children","store","loading","ContactForm","onChangeInputsHandler","event","currentTarget","value","setState","findContact","contactName","props","find","onSubmitHandler","preventDefault","onSave","alert","onResetInputsHandler","this","className","styles","ContactsForm","ContactsForm__title","ContactsForm__form","onSubmit","ContactsForm__field","ContactsForm__label","ContactsForm__input","type","pattern","title","onChange","required","ContactsForm__button","Component","connect","dispatch","Filter","Filter__label","Filter__input","placeholder","defaultProps","contactId","contact","onDelete","item","information","phone","button","onClick","ContactList","length","ContactsList","ContactsList__title","ContactsList__list","map","search","trim","toLowerCase","indexOf","Breakpoints","PhoneBook","routes","home","letters","letter","details","App","exact","path","component","to","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.af9a5457.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ContactItem_item__Y6uTA\",\"information\":\"ContactItem_information__Opoca\",\"name\":\"ContactItem_name__2ro01\",\"phone\":\"ContactItem_phone__1Q7gS\",\"button\":\"ContactItem_button__wqjOU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Filter\":\"Filter_Filter__2MHnP\",\"Filter__label\":\"Filter_Filter__label__QXU8n\",\"Filter__input\":\"Filter_Filter__input__2DWPp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactsList\":\"ContactList_ContactsList__ZuO0v\",\"ContactsList__title\":\"ContactList_ContactsList__title__1fsci\",\"ContactsList__list\":\"ContactList_ContactsList__list__3_YRP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Breakpoints\":\"Breakpoints_Breakpoints__5Zla8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"PhoneBook\":\"PhoneBook_PhoneBook__1yaXN\"};","const types={\r\n  ADD: 'contacts/add',\r\n  DELETE: 'contacts/delete',\r\n  FILTER: 'contacts/filter',\r\n};\r\nexport default types","import shortid from 'shortid';\r\nimport { createAction } from '@reduxjs/toolkit';\r\nimport types from './contacts-types';\r\n\r\nexport const addContact = createAction(types.ADD, (name, number) => ({\r\n  payload: {\r\n    id: shortid.generate(),\r\n    name,\r\n    number,\r\n  },\r\n}));\r\n\r\nexport const deleteContact = createAction(types.DELETE);\r\n\r\nexport const filterContacts = createAction(types.FILTER);","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\n\r\nimport * as actions from 'redux/contacts/contacts-actions';\r\n\r\nconst itemsInitial = [];\r\nconst items = createReducer(itemsInitial, {\r\n  [actions.addContact]: (state, { payload }) => [...state, payload],\r\n  [actions.deleteContact]: (state, { payload }) =>\r\n    state.filter(({ id }) => id !== payload),\r\n});\r\n\r\nconst filterInitial = '';\r\nconst filter = createReducer(filterInitial, {\r\n  [actions.filterContacts]: (_, { payload }) => payload,\r\n});\r\n\r\nexport const contactsReducer = combineReducers({ items, filter });","import { persistReducer } from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\n\r\nimport { contactsReducer } from 'redux/contacts/contacts-reducers';\r\n\r\nconst persistContactsConfig = {\r\n  key: 'phone-contacts',\r\n  storage,\r\n  blacklist: ['filter'],\r\n};\r\n\r\nexport default persistReducer(persistContactsConfig, contactsReducer);","import { getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport logger from 'redux-logger';\r\nimport {\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n  logger,\r\n];\r\n\r\nexport default middleware;","import { configureStore } from '@reduxjs/toolkit';\r\nimport { persistStore } from 'redux-persist';\r\n\r\nimport contactsPersistReducer from 'redux/contacts/contacts-persist';\r\nimport middleware from './middleware';\r\n\r\nexport const vault = configureStore({\r\n  reducer: { contacts: contactsPersistReducer },\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nexport const persistor = persistStore(vault);","import { Provider } from 'react-redux';\r\nimport { PersistGate } from 'redux-persist/integration/react';\r\n\r\nimport * as store from 'redux/store';\r\n\r\nconst ReduxStorage = ({ children }) => {\r\n  return (\r\n    <Provider store={store.vault}>\r\n      <PersistGate loading={null} persistor={store.persistor}>\r\n        {children}\r\n      </PersistGate>\r\n    </Provider>\r\n  );\r\n};\r\n\r\nexport default ReduxStorage;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport * as actions from 'redux/contacts/contacts-actions';\r\nimport styles from './ContactForm.module.css';\r\n\r\nclass ContactForm extends Component {\r\n  static propTypes = {\r\n    onSave: PropTypes.func.isRequired,\r\n    items: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n  };\r\n\r\n  state = { name: '', number: '' };\r\n\r\n  onChangeInputsHandler = event => {\r\n    const { name, value } = event.currentTarget;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  findContact = contactName =>\r\n    this.props.items.find(({ name }) => name === contactName);\r\n\r\n  onSubmitHandler = event => {\r\n    event.preventDefault();\r\n    const { name, number } = this.state;\r\n    const { onSave } = this.props;\r\n    if (this.findContact(name)) {\r\n      alert(`${name} is already in contacts.`);\r\n      return;\r\n    }\r\n    onSave(name, number);\r\n    this.onResetInputsHandler();\r\n  };\r\n\r\n  onResetInputsHandler = () => {\r\n    this.setState({ name: '', number: '' });\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n    return (\r\n      <section className={styles.ContactsForm}>\r\n        <h1 className={styles.ContactsForm__title}>Phonebook</h1>\r\n        <form\r\n          className={styles.ContactsForm__form}\r\n          onSubmit={this.onSubmitHandler}\r\n        >\r\n          <div className={styles.ContactsForm__field}>\r\n            <label className={styles.ContactsForm__label}>\r\n              Name\r\n              <input\r\n                className={styles.ContactsForm__input}\r\n                type=\"text\"\r\n                name=\"name\"\r\n                pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n                title=\"The name can only consist of letters, apostrophes, dashes and spaces. for example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan etc.\"\r\n                onChange={this.onChangeInputsHandler}\r\n                value={name}\r\n                required\r\n              />\r\n            </label>\r\n          </div>\r\n          <div className={styles.ContactsForm__field}>\r\n            <label className={styles.ContactsForm__label}>\r\n              Number\r\n              <input\r\n                className={styles.ContactsForm__input}\r\n                type=\"tel\"\r\n                name=\"number\"\r\n                pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n                title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\r\n                onChange={this.onChangeInputsHandler}\r\n                value={number}\r\n                required\r\n              />\r\n            </label>\r\n          </div>\r\n          <div className={styles.ContactsForm__field}>\r\n            <button className={styles.ContactsForm__button} type=\"submit\">\r\n              Add contact\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </section>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = state => ({ items: state.contacts.items });\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onSave: (name, number) => dispatch(actions.addContact(name, number)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);","import { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport styles from './Filter.module.css';\r\n\r\nimport * as actions from 'redux/contacts/contacts-actions';\r\n\r\nconst Filter = ({ filter, onChange }) => {\r\n  return (\r\n    <section className={styles.Filter}>\r\n      <div className={styles.Filter__label}>\r\n        <input\r\n          className={styles.Filter__input}\r\n          type=\"text\"\r\n          name=\"filter\"\r\n          onChange={onChange}\r\n          value={filter}\r\n          placeholder=\"Search people\"\r\n        />\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nFilter.defaultProps = { filter: '' };\r\n\r\nFilter.propTypes = {\r\n  filter: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  contacts: state.contacts.items,\r\n  filter: state.contacts.filter,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onChange: event => {\r\n    dispatch(actions.filterContacts(event.currentTarget.value));\r\n  },\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);","import { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport styles from './ContactItem.module.css';\r\n\r\nimport * as actions from 'redux/contacts/contacts-actions';\r\n\r\nconst ContactItem = ({ contact: { id, name, number }, onDelete }) => {\r\n  return (\r\n    <li className={styles.item}>\r\n      <section className={styles.information}>\r\n        <h3 className={styles.name}>{`Name: ${name}`}</h3>\r\n        <p className={styles.phone}>{`Phone: ${number}`}</p>\r\n      </section>\r\n      <button className={styles.button} onClick={() => onDelete(id)}>\r\n        Delete\r\n      </button>\r\n    </li>\r\n  );\r\n};\r\n\r\nContactItem.propTypes = {\r\n  contact: PropTypes.shape({\r\n    id: PropTypes.string.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    number: PropTypes.string.isRequired,\r\n  }),\r\n  onDelete: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state, props) => {\r\n  const { id: contactId } = props;\r\n  const contact = state.contacts.items.find(({ id }) => id === contactId);\r\n  return { contact };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onDelete: value => dispatch(actions.deleteContact(value)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactItem);","import { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport styles from './ContactList.module.css';\r\nimport ContactItem from 'components/ContactItem/ContactItem';\r\n\r\nconst ContactList = ({ items }) => {\r\n  if (!items.length) {\r\n    return null;\r\n  }\r\n  return (\r\n    <section className={styles.ContactsList}>\r\n      <h2 className={styles.ContactsList__title}>Contacts</h2>\r\n      <ul className={styles.ContactsList__list}>\r\n        {items.map(({ id }) => {\r\n          return <ContactItem id={id} key={id} />;\r\n        })}\r\n      </ul>\r\n    </section>\r\n  );\r\n};\r\n\r\nContactList.defaultProps = { items: [] };\r\n\r\nContactList.propTypes = {\r\n  items: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    }),\r\n  ).isRequired,\r\n};\r\n\r\nconst filterContacts = (items, filter) => {\r\n  const search = filter.trim().toLowerCase();\r\n  if (filter) {\r\n    return items.filter(({ name }) => name.toLowerCase().indexOf(search) >= 0);\r\n  }\r\n  return [...items];\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  const { items, filter } = state.contacts;\r\n  return { items: filterContacts(items, filter) };\r\n};\r\n\r\nexport default connect(mapStateToProps, null)(ContactList);","import PropTypes from 'prop-types';\r\nimport styles from './Breakpoints.module.css';\r\n\r\nconst Breakpoints = ({ children }) => {\r\n  return <div className={styles.Breakpoints}>{children}</div>;\r\n};\r\n\r\nBreakpoints.defaultProps = {};\r\n\r\nBreakpoints.propTypes = {\r\n  children: PropTypes.oneOfType([\r\n    PropTypes.arrayOf(PropTypes.node),\r\n    PropTypes.node\r\n  ])\r\n};\r\n\r\nexport default Breakpoints;","import ContactForm from 'components/ContactForm/ContactForm';\r\nimport Filter from 'components/Filter/Filter';\r\nimport ContactList from 'components/ContactList/ContactList';\r\nimport Breakpoints from 'components/Breakpoints/Breakpoints';\r\nimport styles from './PhoneBook.module.css';\r\n\r\nconst PhoneBook = () => {\r\n  return (\r\n    <>\r\n      <Breakpoints>\r\n        <div className={styles.PhoneBook}>\r\n          <ContactForm />\r\n          <Filter />\r\n          <ContactList />\r\n      </div>\r\n      </Breakpoints>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PhoneBook;","const routes = {\r\n  home: '/',\r\n  contacts: '/contacts',\r\n  letters: '/contacts/letters/',\r\n  letter: '/contacts/letters/:letterId',\r\n  details: '/contacts/:contactId',\r\n};\r\n\r\nexport default routes;","import { BrowserRouter } from 'react-router-dom';\n\nimport { Route, Switch, Redirect } from 'react-router-dom';\n\nimport PhoneBook from './components/PhoneBook/PhoneBook';\nimport routes from 'routes';\n\nconst App = () => {\n  return (\n    <BrowserRouter>\n      <Switch>\n        <Route exact path={routes.home} component={PhoneBook} />\n        <Redirect to=\"/\" />\n      </Switch>\n    </BrowserRouter>\n  );\n};\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'modern-normalize/modern-normalize.css';\nimport './App.module.css';\n\nimport ReduxStorage from 'redux/ReduxStorage';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <ReduxStorage>\n      <App />\n    </ReduxStorage>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactsForm\":\"ContactForm_ContactsForm__K5esC\",\"ContactsForm__title\":\"ContactForm_ContactsForm__title__1AOix\",\"ContactsForm__form\":\"ContactForm_ContactsForm__form__3eZIA\",\"ContactsForm__label\":\"ContactForm_ContactsForm__label__1emwv\",\"ContactsForm__input\":\"ContactForm_ContactsForm__input__2dQKd\",\"ContactsForm__button\":\"ContactForm_ContactsForm__button__3Fmns\"};"],"sourceRoot":""}